import java.util.Scanner; 

public class Main 

{ 

 public static void main(String[] args) 

 { 

 int w[][]=new int[10][10]; 

 int n,i,j,s,k=0, min; 

 int sum=0,flag=0; 

 int u=0,v=0; 

 int visited[]=new int[10]; 

 

 Scanner sc=new Scanner(System.in); 

 

 System.out.println("Enter the number of vertices"); 

 n=sc.nextInt(); 

 

 for(i=1;i<=n;i++) 

 visited[i]=0; 

 

 System.out.println("Enter the weighted graph"); 

 for(i=1;i<=n;i++) 

 for(j=1;j<=n;j++) 

 w[i][j]=sc.nextInt(); 

 System.out.println("Enter the source vertex"); 

 s=sc.nextInt(); 

 

 visited[s]=1; 

 k=1; 

 

 while (k<=n-1) 

 { 

 min=999; 

 for(i=1;i<=n;i++) 

 for(j=1;j<=n;j++) 

 if(visited[i]==1&&visited[j]==0) 

 if(i!=j&&min>w[i][j]) 

 { min=w[i][j]; 

 u=i; 

 v=j; 

 } 

 visited[v]=1; 

 sum=sum+min; 

 k++; 

 System.out.println(u+"- >"+v+"="+min); 

 } 

 

for(i=1;i<=n;i++)
if(visited[i]==0) 

 flag=1; 

 if(flag==1) 

 System.out.println("No spanning tree"); 

else 

 System.out.println("The cost of minimum spanning tree is "+sum); 

} 

} 


